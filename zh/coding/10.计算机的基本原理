计算机的基本原理
================

要想真正理解一个程序是怎么工作的，就必须明白机算机硬件的基本原理。
否刚，程序就像是在一个“神秘”的盒子里运行，而你的心里总存在着一些
不确定性：万一硬件出错了怎么办？怎么去找问题？怎么证明是硬件问题？

我在刚刚接触程序设计时就有这样的疑问。大学时学过一个
意外的宇宙射线，就有可能导致内存中的一个bit发生跳变，导致后续处理出错。
所以后来windows 98系统经常蓝屏，我总以为是宇宙射线的错。。（汗！！）

CPU：一个能快速算算术，并能做简单判断的呆子
-------------------------------------------

CPU最根本的功能就是算算术。它算的非常快，而且几乎不会出错。
比如加减乘除，它样样精通。另一个重要的功能是作判断，并跟据判断
结果，去执行不同的指令分支。比如，CPU都有这样一条指令，如果上
一个比较指令的结果是零（相等），那么就顺序执行下一条指令；如果不
相等，则跳到另一条指令去执行。比如：

    #!asm
    cmp %A,#1234 # 比较两个值，结果放在一个状态寄存器中
    jnz branch # 如果状态寄存器中的比较位为零，刚执行跳转到branch
    mov ... # 否则，继续顺序执行 ...
    str ...
    add ...
    ...
    branch: # 这是可能跳到的分支指令，跳转后从此处顺序执行
    add ...
    str ...
    mov ...

这样一种简单的逻辑和计算能力，构成了计算机一切眼花缭乱的功能的基础。
在这样简单的逻辑和计算之下，计算机把简单的事情可以做的非常快，然后，奇迹就出现了。
你看到显示屏上的高清电影，或者用聊天工具跟好友交流，CPU所做的其实就是这些
简单的逻辑和计算操作。

计算机本身只是一个空壳子，是软件开发人员给了它灵魂。

这样设计的计算机，本身只有不多的几百条指令，而每一条指令的输入和输出（即每一条指令用到的信息和生成的信息）
都可以严格的规定，并进行严格的测试。试想像一下，现在随便一个小程序，几百行的Ｃ代码，
翻译成机器的指令代码后都有成千上万个指令，一量有一个地方设计的有问题，这种问题很快就能引发可以注意得到的问题。

内存：一个高速的存储器
----------------------

现在的计算机都是[冯·诺伊曼体系结构](http://en.wikipedia.org/wiki/Von_Neumann_architecture)，即指令和数据都
存储在一个地址空间里（可简单理解成一块内存里数据和指令紧靠在一起）。

内存是一种所谓的"易失性存储器",即一旦失去电源易失性存储器

硬盘: 一个长期有效的存储器
--------------------------

硬盘和内存最大不同在于,只要把东西存进去,即使断电,内容也不会丢失.

就像世界上没有完美的人一样,世界上也没有完美的存储器,硬盘虽然能不依赖电来保持内容,
但速度却很有限.

串口和显示器: 计算机运行状态的呈现
----------------------------------

...

未完待续。
